//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: gateways_api.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import GRPC
import NIO
import NIOHTTP1
import SwiftProtobuf


/// Usage: instantiate Gateways_ApiClient, then call methods of this protocol to make API calls.
public protocol Gateways_ApiClientProtocol {
  func getAssetBinding(_ request: Gateways_GetAssetBindingRequest, callOptions: CallOptions?) -> UnaryCall<Gateways_GetAssetBindingRequest, Gateways_GetAssetBindingResponse>
  func getAssetBindings(_ request: Gateways_GetAssetBindingsRequest, callOptions: CallOptions?) -> UnaryCall<Gateways_GetAssetBindingsRequest, Gateways_GetAssetBindingsResponse>
  func getTransferBinding(_ request: Gateways_TransferBindingRequest, callOptions: CallOptions?) -> UnaryCall<Gateways_TransferBindingRequest, Gateways_TransferBindingResponse>
  func createTransferBinding(_ request: Gateways_TransferBindingRequest, callOptions: CallOptions?) -> UnaryCall<Gateways_TransferBindingRequest, Gateways_TransferBindingResponse>
}

public final class Gateways_ApiClient: GRPCClient, Gateways_ApiClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the gateways.Api service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }

  /// --- Asset Bindings:
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAssetBinding.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAssetBinding(_ request: Gateways_GetAssetBindingRequest, callOptions: CallOptions? = nil) -> UnaryCall<Gateways_GetAssetBindingRequest, Gateways_GetAssetBindingResponse> {
    return self.makeUnaryCall(path: "/gateways.Api/GetAssetBinding",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Unary call to GetAssetBindings
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAssetBindings.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAssetBindings(_ request: Gateways_GetAssetBindingsRequest, callOptions: CallOptions? = nil) -> UnaryCall<Gateways_GetAssetBindingsRequest, Gateways_GetAssetBindingsResponse> {
    return self.makeUnaryCall(path: "/gateways.Api/GetAssetBindings",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// --- Transfer Bindings:
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransferBinding.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransferBinding(_ request: Gateways_TransferBindingRequest, callOptions: CallOptions? = nil) -> UnaryCall<Gateways_TransferBindingRequest, Gateways_TransferBindingResponse> {
    return self.makeUnaryCall(path: "/gateways.Api/GetTransferBinding",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

  /// Unary call to CreateTransferBinding
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTransferBinding.
  ///   - callOptions: Call options; `self.defaultCallOptions` is used if `nil`.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTransferBinding(_ request: Gateways_TransferBindingRequest, callOptions: CallOptions? = nil) -> UnaryCall<Gateways_TransferBindingRequest, Gateways_TransferBindingResponse> {
    return self.makeUnaryCall(path: "/gateways.Api/CreateTransferBinding",
                              request: request,
                              callOptions: callOptions ?? self.defaultCallOptions)
  }

}


// Provides conformance to `GRPCPayload` for request and response messages
extension Gateways_GetAssetBindingRequest: GRPCProtobufPayload {}
extension Gateways_GetAssetBindingResponse: GRPCProtobufPayload {}
extension Gateways_GetAssetBindingsRequest: GRPCProtobufPayload {}
extension Gateways_GetAssetBindingsResponse: GRPCProtobufPayload {}
extension Gateways_TransferBindingRequest: GRPCProtobufPayload {}
extension Gateways_TransferBindingResponse: GRPCProtobufPayload {}

