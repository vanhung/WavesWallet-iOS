syntax = "proto3";

import "messages.proto";

package gateways;

service WavesApi {
    // --- Asset Bindings:
    rpc GetWavesAssetBindings (GetWavesAssetBindingsRequest) returns (AssetBindingsResponse);

    // --- Transfer Bindings:
    rpc GetDepositTransferBinding (GetDepositTransferBindingRequest) returns (GetTransferBindingResponse);
    rpc GetWithdrawalTransferBinding (GetWithdrawalTransferBindingRequest) returns (GetTransferBindingResponse);

    rpc CreateDepositTransferBinding (CreateDepositTransferBindingRequest) returns (CreateTransferBindingResponse);
    rpc CreateWithdrawalTransferBinding (CreateWithdrawalTransferBindingRequest) returns (CreateTransferBindingResponse);
}

// ---
// GetWavesAssetBindings
// ---

message GetWavesAssetBindingsRequest {
    enum Direction {
        ALL = 0;
        DEPOSIT = 1;
        WITHDRAWAL = 2;
    }

    message AssetTypeFilter {
        Asset.Type asset_type = 1;
    }

    Direction direction = 1;
    AssetTypeFilter asset_type = 2;
    string includes_external_asset_ticker = 3;
    string includes_waves_asset = 4;
}

message AssetBindingsResponse {
    repeated AssetBinding asset_bindings = 1;
}

// ---
// GetDepositTransferBinding | GetWithdrawalsTransferBinding
// ---
message GetDepositTransferBindingRequest {
    string asset = 1;
    string recipient_address = 2;
}

message GetWithdrawalTransferBindingRequest {
    string asset = 1;
    string recipient_address = 2;
}

message GetTransferBindingResponse {
    TransferBinding transfer_binding = 1;
}

// ---
// CreateDepositTransferBinding | CreateWithdrawalTransferBinding
// ---

message CreateDepositTransferBindingRequest {
    string asset = 1;
    string recipient_address = 2;
}

message CreateWithdrawalTransferBindingRequest {
    string asset = 1;
    string recipient_address = 2;
}

message CreateTransferBindingResponse {
    TransferBinding transfer_binding = 1;
}